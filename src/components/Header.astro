---
import Container from "@/components/Container.astro";
import { Icon } from "astro-icon/components";
import { SITE, LINKS } from "@/consts";
import { cn } from "@/lib/utils";
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
---

<header id="header" class="fixed top-0 z-50 h-16 w-full">
  <Container size="md">
    <div class="relative h-full w-full">
      <div class="absolute left-0 top-1/2 flex -translate-y-1/2 font-semibold">
        <a
          href="/"
          class="flex text-current transition-colors duration-300 ease-in-out hover:text-black dark:hover:text-white"
        >
          <div class="font-bold uppercase">
            {SITE.TITLE}
          </div>
        </a>
      </div>

      <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
        <nav class="hidden items-center justify-center gap-1 text-sm md:flex">
          {
            LINKS.map((LINK) => (
              <a
                href={LINK.HREF}
                class={cn(
                  "h-8 rounded-full px-3 text-current",
                  "flex items-center justify-center",
                  "transition-colors duration-300 ease-in-out",
                  pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF
                    ? "bg-black text-white dark:bg-white dark:text-black"
                    : "hover:bg-black/20 hover:text-black dark:hover:bg-white/20 dark:hover:text-white",
                )}
              >
                {LINK.TEXT}
              </a>
            ))
          }
        </nav>
      </div>

      <div class="buttons absolute right-0 top-1/2 flex -translate-y-1/2 gap-2">
        <button
          id="header-theme-button"
          aria-label={`Toggle light and dark theme`}
          class={cn(
            "flex",
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/20 dark:hover:bg-white/20",
            "stroke-current hover:stroke-black hover:dark:stroke-white",
            "border border-black/10 dark:border-white/25",
            "transition-colors duration-300 ease-in-out",
          )}
        >
          <Icon name="sun" class="block size-full dark:hidden" />
          <Icon name="moon" class="hidden size-full dark:block" />
        </button>

        <button
          id="header-drawer-button"
          aria-label={`Toggle drawer open and closed`}
          class={cn(
            "flex md:hidden",
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/20 dark:hover:bg-white/20",
            "stroke-current hover:stroke-black hover:dark:stroke-white",
            "border border-black/10 dark:border-white/25",
            "transition-colors duration-300 ease-in-out",
          )}
        >
          <svg
            id="drawer-open"
            class="size-full"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
          >
            <path d="M3 12h18"></path>
            <path d="M3 6h18"></path>
            <path d="M3 18h18"></path>
          </svg>
          <svg
            id="drawer-close"
            class="size-full"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
          >
            <path d="M18 6L6 18"></path>
            <path d="M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </Container>
</header>

<style>
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer");
    const drawerButton = document.getElementById("header-drawer-button");
    drawer?.classList.toggle("open");
    drawerButton?.classList.toggle("open");
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button");
    drawerButton?.addEventListener("click", toggleDrawer);
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton);
  initializeDrawerButton();
</script>
