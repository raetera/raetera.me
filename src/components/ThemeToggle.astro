---
import { Icon } from "astro-icon/components";
import { cn } from "@/lib/utils";
---

<button
  id="theme_toggle"
  aria-label={`Toggle light and dark theme`}
  class={cn(
    "flex",
    "size-9 rounded-full p-2 items-center justify-center",
    "bg-transparent hover:bg-black/20 dark:hover:bg-white/20",
    "stroke-current hover:stroke-black hover:dark:stroke-white",
    "border border-black/25 dark:border-white/25",
    "transition-colors duration-300 ease-in-out"
  )}
>
  <Icon name="sun" class="block size-full dark:hidden" />
  <Icon name="moon" class="hidden size-full dark:block" />
</button>

<style>
  html {
    color-scheme: light;
    background-color: white;
  }

  html.dark {
    color-scheme: dark;
    background-color: black;
  }
</style>

<script is:inline>
  function setTheme(theme) {
    const element = document.documentElement;
    element.classList.toggle("dark", theme === "dark");
    localStorage.theme = theme;
  }

  function changeTheme() {
    const currentTheme = document.documentElement.classList.contains("dark")
      ? "dark"
      : "light";
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    setTheme(newTheme);
  }

  function preloadTheme() {
    const savedTheme = localStorage.theme;
    const preferredTheme = window.matchMedia("(prefers-color-scheme: dark)")
      .matches
      ? "dark"
      : "light";

    const theme =
      savedTheme === "light" || savedTheme === "dark"
        ? savedTheme
        : preferredTheme;
    setTheme(theme);
  }

  function initializeThemeButtons() {
    const themeToggleButton = document.getElementById("theme_toggle");
    themeToggleButton?.addEventListener("click", changeTheme);
  }

  window.onload = () => {
    document.addEventListener("astro:after-swap", initializeThemeButtons);
    initializeThemeButtons();
  };

  document.addEventListener("astro:after-swap", preloadTheme);
  preloadTheme();
</script>
