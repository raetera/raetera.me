---
import { Icon } from "astro-icon/components";
import { cn } from "@/lib/utils";
---

<button
  id="theme_toggle"
  aria-label={`Toggle light and dark theme`}
  class={cn(
    "flex",
    "size-9 rounded-full p-2 items-center justify-center",
    "bg-transparent hover:bg-black/20 dark:hover:bg-white/20",
    "stroke-current hover:stroke-black hover:dark:stroke-white",
    "border border-black/25 dark:border-white/25",
    "transition-colors duration-300 ease-in-out",
  )}
>
  <Icon name="sun" class="block size-full dark:hidden" />
  <Icon name="moon" class="hidden size-full dark:block" />
</button>

<style is:global>
  :root {
    --bg-light: #ffffff;
    --bg-dark: #000000;
    --text-light: rgba(0, 0, 0, 0.75);
    --text-dark: rgba(255, 255, 255, 0.75);
  }

  html {
    color-scheme: light;
    background-color: var(--bg-light);
    color: var(--text-light);
  }

  html.dark {
    color-scheme: dark;
    background-color: var(--bg-dark);
    color: var(--text-dark);
  }
</style>

<script is:inline>
  (function () {
    function setTheme(theme) {
      const element = document.documentElement;
      element.classList.toggle("dark", theme === "dark");
      localStorage.theme = theme;
    }

    function changeTheme() {
      const currentTheme = document.documentElement.classList.contains("dark")
        ? "dark"
        : "light";
      const newTheme = currentTheme === "dark" ? "light" : "dark";
      setTheme(newTheme);
    }

    function preloadTheme() {
      const savedTheme = localStorage.theme;
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)",
      ).matches;
      const theme =
        savedTheme === "light" || savedTheme === "dark"
          ? savedTheme
          : prefersDark
            ? "dark"
            : "light";
      setTheme(theme);
    }

    function initializeThemeButtons() {
      const themeToggleButton = document.getElementById("theme_toggle");
      themeToggleButton?.addEventListener("click", changeTheme);
    }

    // Use requestAnimationFrame for smoother initial theme application
    requestAnimationFrame(() => {
      preloadTheme();
      initializeThemeButtons();
    });

    // Listen for system theme changes
    window.matchMedia("(prefers-color-scheme: dark)").addListener((e) => {
      if (localStorage.theme !== "light" && localStorage.theme !== "dark") {
        setTheme(e.matches ? "dark" : "light");
      }
    });

    document.addEventListener("astro:after-swap", () => {
      requestAnimationFrame(() => {
        preloadTheme();
        initializeThemeButtons();
      });
    });
  })();
</script>
