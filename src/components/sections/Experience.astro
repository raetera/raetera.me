---
import Section from "../Section.astro";
import { work } from "@cv";
import ExpandButton from "../ExpandButton";
---

<Section className={Astro.props.className} title="Experience">
  <ul class="flex flex-col">
    {
      work.map(
        ({
          name,
          startDate,
          endDate,
          position,
          summary,
          responsibilities,
          url,
          location,
          location_type,
        }) => {
          const startYear = new Date(startDate).getFullYear();
          const endYear = endDate ? new Date(endDate).getFullYear() : "Present";

          return (
            <li class="relative">
              <div class="group relative grid pb-1 transition-all sm:grid-cols-12 sm:gap-8">
                <header class="mt-1 text-xs font-bold text-white/50 sm:col-span-2">
                  <time datetime={startDate}>{startYear}</time>
                  <span class="mx-1">-</span>
                  <time datetime={endDate}>{endYear}</time>
                </header>
                <div class="relative flex flex-col pb-6 before:absolute before:-ml-6 before:mt-2 before:h-full before:w-px before:bg-neutral-500 sm:col-span-10">
                  <div class="absolute mt-2 h-2 w-2 -translate-x-[1.71rem] rounded-full bg-white ring ring-white" />
                  <div class="flex flex-col pb-6">
                    <h3 class="text-left text-base font-medium leading-snug text-white">
                      <div class="inline-flex flex-wrap items-center">
                        <span>{position}</span>
                        <span class="mx-1.5">@</span>
                        {url ? (
                          <a
                            class="inline-flex items-center hover:text-white/75"
                            href={url}
                            target="_blank"
                            rel="noopener noreferrer"
                          >
                            {name}
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                              class="ml-1 h-4 w-4 shrink-0 translate-y-px"
                              aria-hidden="true"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
                                clip-rule="evenodd"
                              />
                            </svg>
                          </a>
                        ) : (
                          <span>{name}</span>
                        )}
                      </div>
                    </h3>
                    {(location || location_type) && (
                      <p class="mt-1 text-sm">
                        {location}
                        {location && location_type && " - "}
                        {location_type}
                      </p>
                    )}
                    <div class="mt-2 flex flex-col gap-4 text-sm">
                      {summary && (
                        <div>
                          <ul class="space-y-1 text-white/50">
                            {Array.isArray(summary) ? (
                              summary.map((item) => <li>{item}</li>)
                            ) : (
                              <li>{summary}</li>
                            )}
                          </ul>
                        </div>
                      )}
                      {responsibilities && (
                        <ExpandButton client:load>
                          {responsibilities && (
                            <div>
                              <h4 class="font-medium">Responsibilities:</h4>
                              <ul class="list-inside list-disc space-y-1 text-white/50">
                                {responsibilities.map((responsibility) => (
                                  <li>{responsibility}</li>
                                ))}
                              </ul>
                            </div>
                          )}
                        </ExpandButton>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </li>
          );
        },
      )
    }
  </ul>
</Section>
